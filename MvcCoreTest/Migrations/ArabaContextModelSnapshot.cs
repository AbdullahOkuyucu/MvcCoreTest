// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcCoreTest.Context;

#nullable disable

namespace MvcCoreTest.Migrations
{
    [DbContext(typeof(ArabaContext))]
    partial class ArabaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MvcCoreTest.Entiti.Aciklama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArabaId")
                        .HasColumnType("int");

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArabaId");

                    b.ToTable("Aciklamalar");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Araba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Fiyat")
                        .HasColumnType("float");

                    b.Property<short?>("UretimYili")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Arabalar");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArabaId")
                        .HasColumnType("int");

                    b.Property<int>("UreticiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArabaId");

                    b.HasIndex("UreticiId");

                    b.ToTable("Modellers");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Uretici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaLokasyon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UretimDurumu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Ureticiler");
                });

            modelBuilder.Entity("MvcCoreTest.Models.ArabaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double?>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("FiyatModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("UretimYili")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("ArabaModel");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Aciklama", b =>
                {
                    b.HasOne("MvcCoreTest.Entiti.Araba", "Araba")
                        .WithMany("Aciklamalar")
                        .HasForeignKey("ArabaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Araba");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Model", b =>
                {
                    b.HasOne("MvcCoreTest.Entiti.Araba", "Araba")
                        .WithMany("Modeller")
                        .HasForeignKey("ArabaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcCoreTest.Entiti.Uretici", "Uretici")
                        .WithMany("Modeller")
                        .HasForeignKey("UreticiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Araba");

                    b.Navigation("Uretici");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Araba", b =>
                {
                    b.Navigation("Aciklamalar");

                    b.Navigation("Modeller");
                });

            modelBuilder.Entity("MvcCoreTest.Entiti.Uretici", b =>
                {
                    b.Navigation("Modeller");
                });
#pragma warning restore 612, 618
        }
    }
}
